entity Location {
	streetAddress String,
	postalCode String,
	city String,
	county String,
	timestamp Integer,
	userId Integer
}

entity Tank {
	tankName String required,
    tankType TankType required,
    description String,
    timestamp Integer,
    userId Integer
}

enum TankType {
    POND,  AQUARIUM, OTHER
}

entity Device {
	deviceName String required,
    deviceType DeviceType required,
    description String required,
    timestamp Integer,
    userId Integer
}

enum DeviceType {
    PUMP,  FILTER, UVLAMP, UVCLARIFIER, AIRPUMP, OTHER
}

entity TempMeter {
    readingDate ZonedDateTime,
	tempVal   Double required,
    timestamp Integer,
    userId Integer
}

entity MeterReading {
	readingDate ZonedDateTime required,
	description String,
	reading Double required,
	tempVal Double required,
	timestamp Integer,
	userId Integer
}

 entity FilterPumpCleaning {
	cleaningDate ZonedDateTime required,
	description String,
    tempVal Double required,
    timestamp Integer,
    userId Integer
}

 entity WaterChange {
	changeDate ZonedDateTime required,
	description String,
    readingBefore Double required,
    readingAfter Double required,
    tempVal Double required,
    timestamp Integer,
    userId Integer
}

 entity LiveStock {
	date ZonedDateTime required,
    reason StockCase,
	description String,
    qty Integer required,
    tempVal Double required,
    timestamp Integer,
    userId Integer
}

 entity ChemicalAnalysis {
	date ZonedDateTime required,
	nO2 String,
    nO3 String,
    nH4 String,
    ph String,
    tempVal Double required,
    timestamp Integer,
    userId Integer
}

  entity Chemicals {
	date ZonedDateTime required,
	qty Integer,
    reason String,
    tempVal Double required,
    timestamp Integer,
    userId Integer
}

  entity OtherWorks {
	date ZonedDateTime required,
    reason String,
	qty Integer,
    descripton String,
    tempVal Double required,
    timestamp Integer,
    userId Integer
}


enum StockCase {
    ADDED, REMOVED, DIED, HERON, OTHER
}

microservice * with pondNotes
search * with elasticsearch


relationship OneToOne{
   Device{tank(tankName)} to Tank
}
relationship ManyToOne {
   Tank{location(streetAddress)} to Location,
   WaterChange{tank(tankName)} to Tank,
   LiveStock {tank(tankName)} to Tank,
   MeterReading{tank(tankName)} to Tank,
   OtherWorks{tank(tankName)} to Tank,
   TempMeter{tank(tankName)} to Tank,
   ChemicalAnalysis{tank(tankName)} to Tank,
   FilterPumpCleaning{device(deviceName)} to Device,
   Chemicals{tank(tankName)} to Tank
}

// Set pagination options
paginate Device, TempMeter with infinite-scroll
paginate MeterReading with pagination
paginate FilterPumpCleaning, ChemicalAnalysis, Chemicals, LiveStock with pagination



// Set service options to all except few
service all with serviceImpl
// Set an angular suffix
angularSuffix * with notes
